#!/usr/bin/env python3
#coding: utf-8
#Date: 2019-01-23 08:48:32
#Author: zheng_oh
#email: 894389673@qq.com
from bs4 import BeautifulSoup as BS
from selenium import webdriver
from selenium.webdriver.chrome.options import Options
import requests
import time
import re
from PIL import Image as PI
from tkinter import *
from tkinter import messagebox
import pickle
import threading
class Tk_win():
	def __init__(self, var_label,var_entry):
		self.access=False
		self.var_label=str(var_label)
		self.var_entry=str(var_entry)
	def Graph_login(self):
		global win
		root=Tk()
		root.withdraw()
		win = Toplevel()
		win.title("用户登录")
		sw = win.winfo_screenwidth()
		sh = win.winfo_screenheight()
		ww = 810
		wh = 400
		x = (sw - ww) / 2
		y = (sh - wh) / 2
		win.geometry("%dx%d+%d+%d" % (ww, wh, x, y))
		canvas = Canvas(win, height=200, width=800)
		p_bg='D:\\sublime_project\\python\\bg.png'
		image_file = PhotoImage(file=p_bg)
		image = canvas.create_image(0, 0, anchor='nw', image=image_file)
		canvas.pack(side='top')
		var_label=StringVar()
		var_entry=StringVar()
		var_label.set(self.var_label)
		var_entry.set(self.var_entry)
		def usr_login():
			global textinfo
			use_id = var_entry.get()
			if use_id in use_list:
				self.access=True
				win.withdraw()
				self.yanzheng()
			else:
				messagebox.showinfo(title='Hi', message='ID错误，重新输入或请联系微信：zheng_oh')
		def usr_sign_up():
			pass
		l = Label(win, textvariable=var_label, font=("Arial,16")).pack(side=TOP, expand=NO, anchor=CENTER)
		entry_ = Entry(win, textvariable=var_entry,show='*').pack(side=TOP, expand=NO, anchor=CENTER)
		B_1=Button(win, text='Login', command=usr_login).place(x=380, y=300)
		# B_2= Button(win, text='Sign',command=usr_sign_up).place(x=460, y=300)
		self.get_use_list()
		win.mainloop()
	def Graph_main(self):
		win2 = Toplevel()
		win2.title("SCI download")
		sw = win2.winfo_screenwidth()
		sh = win2.winfo_screenheight()
		ww = 810
		wh = 400
		x = (sw - ww) / 2
		y = (sh - wh) / 2
		win2.geometry("%dx%d+%d+%d" % (ww, wh, x, y))
		canvas = Canvas(win2, height=200, width=800)
		p_bg='D:\\sublime_project\\python\\bg.png'
		image_file = PhotoImage(file=p_bg)
		image = canvas.create_image(0, 0, anchor='nw', image=image_file)
		canvas.pack(side='top')
		var_label=StringVar()
		var_entry=StringVar() 
		var_label.set('Sci title:')
		var_entry.set('A study of ...')
		def get_doi():
			global n,title
			title=var_entry.get()
			title_=title.replace(' ','+')
			url="http://xueshu.baidu.com/s?wd=+"+title_+"&ie=utf-8&tn=SE_baiduxueshu_c1gjeupa&sc_from=&sc_as_para=sc_lib%3A&rsv_n=2&rsv_sug2=0"
			options = webdriver.ChromeOptions()
			options.headless = True
			driver = webdriver.Chrome(options=options)
			driver.get(url)
			html=driver.page_source
			driver.close()
			driver.quit()
			soup=BS(html,'lxml')
			p=soup.select('div.main-info > div.c_content > div.doi_wr > p.kw_main')
			if p:
				doi=p[0].text.lstrip()
				doi=re.findall(r"10.+", doi)
				doi=doi[0]
				n=len(doi)
				k="论文doi："+doi
				text1.insert(INSERT,k+'\r\n')
				get_pdf_src(doi)
			else:
				messagebox.showerror(message='对不起！输入有误或数据库未找到(>_<)')
		def get_pdf_src(doi):
			global pdf_src
			doi_url='http://www.sci-hub.fun/'+doi
			options = webdriver.ChromeOptions()
			options.headless = True
			driver = webdriver.Chrome(options=options)
			driver.get(doi_url)
			html=driver.page_source
			driver.close()
			driver.quit()
			soup=BS(html,'lxml')
			pdf_src=soup.select('#pdf')
			if pdf_src:
				pdf_src=pdf_src[0]['src']
				text1.insert(INSERT,'-'*30+'\r\n')
				text1.insert(INSERT,'已获取到SCI链接...\r\n')
				self.download_pdf(pdf_src)
			else:
				messagebox.showerror(message='对不起！数据库中没有此文献，请根据doi号自行下载(>_<)')
		l = Label(win2, textvariable=var_label, font=("Arial,16")).pack(side=TOP, expand=NO, anchor=CENTER)
		entry_ = Entry(win2, textvariable=var_entry,show=None).pack(side=TOP, expand=NO, anchor=CENTER)
		B= Button(win2, text='搜索',width=15,height=2,font='Times,24',command=get_doi).place(x=330, y=300)
		text1 = Text(win2,width=30,height=15)
		#INSERT索引表示在光标处插入
		#END索引号表示在最后插入
		text1.place(x=10,y=200)
		win2.mainloop()
	def get_use_list(self):
		global use_list
		try:
			url = "https://raw.githubusercontent.com/zheng-oh/zheng_repository/master/users.txt"
			use_rep = requests.get(url, timeout=8)
			l = use_rep.text
			use_list = l.split()
		except BaseException as e:
			messagebox.showerror(message='貌似网络不通畅(>_<)')
	def yanzheng(self):
		if self.access==True:
			self.Graph_main()
		else:
			self.Graph_login()
	def download_pdf(self,pdf_src):
			options = webdriver.ChromeOptions()
			options.headless = True
			driver = webdriver.Chrome(options=options)
			driver.get(pdf_src)
			html_pdf=driver.page_source
			soup_pdf=BS(html_pdf,'lxml')
			p=soup_pdf.select('body > div > table > tbody > tr > td > form > input[type="text"]:nth-child(3)')
			if p:
				driver.save_screenshot('D:\\sublime_project\\python\\验证码.png')
				img = PI.open("D:\\sublime_project\\python\\验证码.png")
				cropped = img.crop((0,150,800,370))#(left, upper, right, lower)
				cropped.save("D:\\sublime_project\\python\\验证码.png")
				messagebox.showinfo('提示','需要验证')
				self.Graph_yanzheng(driver)
			else:
				try:
					driver.close()
					driver.quit()
					print("正在下载.....")
					r=requests.get(pdf_src)
					self.loading(r)
				except Exception as e:
					messagebox.showerror(message='您的网络不通畅，请使提示地址自行下载')
					text1.insert(INSERT,'-'*30+'\r\n')
					text1.insert(INSERT,'下载地址：'+pdf_src+"\r\n")
	def loading(self,r):
		if r.status_code==200:
			filename=title+'.pdf'
			with open(filename, 'wb') as f:
				f.write(r.content)
			messagebox.showinfo('提示','下载成功O(∩_∩)O')
		else:
			time.sleep(5)
			messagebox.showinfo('提示','网速有点慢，继续等待？.....')
			loading(r)
	def Graph_yanzheng(self,driver):
		win3 = Toplevel()
		win3.title("验证码验证")
		sw = win3.winfo_screenwidth()
		sh = win3.winfo_screenheight()
		ww = 810
		wh = 400
		x = (sw - ww) / 2
		y = (sh - wh) / 2
		win.geometry("%dx%d+%d+%d" % (ww, wh, x, y))
		canvas = Canvas(win3, height=200, width=800)
		image_file = PhotoImage(file='D:\\sublime_project\\python\\验证码.png')
		image = canvas.create_image(0, 0, anchor='nw', image=image_file)
		canvas.pack(side='top')
		var_entry=StringVar()
		var_entry.set('')
		def yzma():
			yzm=var_entry.get()
			driver.find_element_by_name('answer').send_keys(u'{0}'.format(yzm))
			driver.find_element_by_xpath('/html/body/div/table/tbody/tr/td/form/p[2]/input').click()
			driver.close()
			driver.quit() 
			self.download_pdf(pdf_src)
		entry_ = Entry(win3, textvariable=var_entry,show=None).pack(side=TOP, expand=NO, anchor=CENTER)
		B= Button(win3, text='Submit',command=yzma).place(x=460, y=200)
		self.get_use_list()
		win3.mainloop()
if __name__ == '__main__':
	win_login=Tk_win('User ID:','')
	win_login.Graph_login()
